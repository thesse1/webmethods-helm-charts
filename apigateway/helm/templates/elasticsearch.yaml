{{- if .Values.elasticsearch.deploy }}
---
# /*
#  * Copyright (c) 2021 Software AG, Darmstadt, Germany and/or its licensors
#  *
#  * SPDX-License-Identifier: Apache-2.0
#  *
#  *   Licensed under the Apache License, Version 2.0 (the "License");
#  *   you may not use this file except in compliance with the License.
#  *   You may obtain a copy of the License at
#  *
#  *       http://www.apache.org/licenses/LICENSE-2.0
#  *
#  *   Unless required by applicable law or agreed to in writing, software
#  *   distributed under the License is distributed on an "AS IS" BASIS,
#  *   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#  *   See the License for the specific language governing permissions and
#  *   limitations under the License.
#  *
#  */
apiVersion: elasticsearch.k8s.elastic.co/v1
kind: Elasticsearch
metadata:
  name: {{ include "common.names.fullname" . }}
  labels:
    {{- with .Values.extraLabels -}}
    {{ toYaml . | nindent 4 }}
    {{- end }}      
spec:
  version: {{ .Values.elasticsearch.version }}
  {{- if .Values.elasticsearch.image }}
  image: {{ .Values.elasticsearch.image }}
  {{- end }}
  http:
    tls:
    {{- if .Values.elasticsearch.tlsEnabled }}
      certificate: 
        secretName: {{ tpl .Values.elasticsearch.certificateSecretName . }}
      selfSignedCertificate:
        {{- if .Values.elasticsearch.subjectAltNames }}
        subjectAltNames:
          - dns: {{ tpl .Values.elasticsearch.subjectAltNames . }}
        {{- end }}
    {{- else }}
      selfSignedCertificate:
        disabled: true
    {{- end }}
  auth:
    fileRealm:
      - secretName: {{ include "apigateway.elasticsecret" . }}
      - secretName: {{ include "apigateway.kibanasecret" . }}
      {{- if .Values.elasticsearch.extraSecrets }}
      {{- range .Values.elasticsearch.extraSecrets }}
      - secretName: {{ tpl .name $ }}
      {{- end }}
      {{- end }}
  {{- if .Values.elasticsearch.podDisruptionBudget.enabled }}
  {{- if .Values.elasticsearch.podDisruptionBudget.data }}
  podDisruptionBudget:
    {{- toYaml .Values.elasticsearch.podDisruptionBudget.data | nindent 4 }}
  {{- end }}
  {{- else }}
  podDisruptionBudget: {}
  {{- end }}
  nodeSets:
  {{- if .Values.elasticsearch.nodeSets }}
    {{- toYaml .Values.elasticsearch.nodeSets | nindent 4 }}
  {{ else }}
    # use default node set
    - name: default
      count: {{ .Values.elasticsearch.defaultNodeSet.count }}
      config:
        {{- if not .Values.elasticsearch.defaultNodeSet.memoryMapping  }}
        node.store.allow_mmap: false
        {{- end }}
      podTemplate:    
        metadata:
          labels: 
            {{- with .Values.extraLabels -}}
            {{ toYaml . | nindent 12 }}
            {{- end }}
          annotations:
            {{- with .Values.elasticsearch.defaultNodeSet.annotations -}}
            {{ toYaml . | nindent 12 }}
            {{- end }}
        spec:
          imagePullSecrets:
            {{- toYaml .Values.imagePullSecrets | nindent 12 }}
          initContainers:
          {{- if and .Values.elasticsearch.defaultNodeSet.setMaxMapCount .Values.elasticsearch.defaultNodeSet.memoryMapping }}
          - name: sysctl
            securityContext:
              privileged: true
              runAsUser: 0
            command: ['sh', '-c', 'sysctl -w vm.max_map_count=262144']
            resources:
              requests:
                memory: 50Mi
                cpu: 500m
              limits:
                memory: 100Mi
          {{- end }}
          {{- if .Values.elasticsearch.defaultNodeSet.installMapperSizePlugin }}
          - name: install-plugins
            command:
            - sh
            - -c
            - |
              bin/elasticsearch-plugin install --batch mapper-size
            requests:
              memory: 50Mi
              cpu: 500m
            limits:
              memory: 100Mi                    
          {{- end }}
  {{- end }}
{{- end }}